<?xml version="1.0"?>
<!DOCTYPE tsung SYSTEM "/usr/share/tsung/tsung-1.0.dtd">
<tsung loglevel="debug" dumptraffic="true">

  <clients>
    <client host="localhost" use_controller_vm="false"/>
    <client host="localhost" use_controller_vm="false"/>
    <client host="localhost" use_controller_vm="false"/>
    <client host="localhost" use_controller_vm="false"/>
  </clients>

  <!-- Server side setup -->
  <servers>
    <server host="127.0.0.1" port="{{port}}" type="tcp"/>
  </servers>

  <monitoring>
    <monitor host="localhost"/>
  </monitoring>

  <load duration="70" unit="second">
    
    <user session="{{sql}}-create-schema" start_time="0" unit="minute"></user>

    <arrivalphase phase="1" duration="5" unit="second">
      <users maxnumber="0" interarrival="1" unit="minute"></users>
    </arrivalphase>

    <arrivalphase phase="2" duration="15" unit="second">
      <session_setup name="{{sql}}-workload-fill" probability="100"/>
      <session_setup name="{{sql}}-workload-test" probability="0"/>
      <users arrivalrate="100" unit="second"></users>
    </arrivalphase>

    <arrivalphase phase="3" duration="5" unit="second">
      <users maxnumber="0" interarrival="1" unit="minute"></users>
    </arrivalphase>

    <user session="{{sql}}-migrate-schema" start_time="40" unit="second"></user>
    <arrivalphase phase="4" duration="45" unit="second">
      <session_setup name="{{sql}}-workload-fill" probability="0"/>
      <session_setup name="{{sql}}-workload-test" probability="100"/>
      <users arrivalrate="50" unit="second"></users>
    </arrivalphase>

    <user session="{{sql}}-drop-schema" start_time="69" unit="second"></user>

  </load>

  <sessions>

    <session probability="0" name="{{sql}}-create-schema" type="ts_{{sql}}">
      <request>
        <{{sql}} type="connect" database="{{database}}" username="{{user}}" />
      </request>
      <request>
        <{{sql}} type="authenticate" database="{{database}}" username="{{user}}" password="{{password}}" />
      </request>
      <request>
        <{{sql}} type="sql">CREATE DATABASE test</{{sql}}>
      </request>
      <request>
        <{{sql}} type="close"></{{sql}}>
      </request>
      <request>
        <{{sql}} type="connect" database="test" username="{{user}}" />
      </request>
      <request>
        <{{sql}} type="authenticate" database="test" username="{{user}}" password="{{password}}" />
      </request>
      {% for statement in schema %}
      <request>
        <{{sql}} type="sql">{{ statement }}</{{sql}}>
      </request>
      {% endfor %}
      <request>
        <{{sql}} type="close"></{{sql}}>
      </request>
    </session>

    <session probability="0" name="{{sql}}-migrate-schema" type="ts_{{sql}}">
      <request>
        <{{sql}} type="connect" database="test" username="{{user}}" />
      </request>
      <request>
        <{{sql}} type="authenticate" database="test" username="{{user}}" password="{{password}}" />
      </request>
      {% for statement in migration %}
      <request>
        <{{sql}} type="sql">{{ statement }}</{{sql}}>
      </request>
      {% endfor %}
      <request>
        <{{sql}} type="close"></{{sql}}>
      </request>
    </session>

    <session probability="0" name="{{sql}}-drop-schema" type="ts_{{sql}}">
      <request>
        <{{sql}} type="connect" database="{{database}}" username="{{user}}" />
      </request>
      <request>
        <{{sql}} type="authenticate" database="{{database}}" username="{{user}}" password="{{password}}" />
      </request>
      <request tag="drop">
        <{{sql}} type="sql">DROP DATABASE test</{{sql}}>
      </request>
      <request>
        <{{sql}} type="close"></{{sql}}>
      </request>
    </session>

    <session probability="50" name="{{sql}}-workload-fill" type="ts_{{sql}}">
      <setdynvars sourcetype="erlang" callback="ts_user_server:get_unique_id">
	<var name="id1" />
      </setdynvars>
      <setdynvars sourcetype="erlang" callback="ts_user_server:get_unique_id">
	<var name="id2" />
      </setdynvars>
      <setdynvars sourcetype="random_number" start="1" end="99999999">
	<var name="int1" />
      </setdynvars>
      <setdynvars sourcetype="random_number" start="1" end="99999999">
	<var name="int2" />
      </setdynvars>
      <setdynvars sourcetype="random_number" start="0" end="99">
	<var name="int3" />
      </setdynvars>
      <setdynvars sourcetype="random_string" length="30">
	<var name="str1" />
      </setdynvars>
      <setdynvars sourcetype="random_string" length="10">
	<var name="str2" />
      </setdynvars>
      <setdynvars sourcetype="random_string" length="10">
	<var name="str3" />
      </setdynvars>
      <request>
        <{{sql}} type="connect" database="test" username="{{user}}" />
      </request>
      <request>
        <{{sql}} type="authenticate" database="test" username="{{user}}" password="{{password}}" />
      </request>
      {% for statement in workload_fill %}
      <request subst="true">
        <{{sql}} type="sql">{{ statement }}</{{sql}}>
      </request>
      {% endfor %}
      <request>
        <{{sql}} type="close"></{{sql}}>
      </request>
  </session>

    <session probability="50" name="{{sql}}-workload-test" type="ts_{{sql}}">
      <setdynvars sourcetype="erlang" callback="ts_user_server:get_unique_id">
	<var name="id1" />
      </setdynvars>
      <setdynvars sourcetype="erlang" callback="ts_user_server:get_unique_id">
	<var name="id2" />
      </setdynvars>
      <setdynvars sourcetype="random_number" start="1" end="99999999">
	<var name="int1" />
      </setdynvars>
      <setdynvars sourcetype="random_number" start="1" end="99999999">
	<var name="int2" />
      </setdynvars>
      <setdynvars sourcetype="random_number" start="0" end="99">
	<var name="int3" />
      </setdynvars>
      <setdynvars sourcetype="random_string" length="30">
	<var name="str1" />
      </setdynvars>
      <setdynvars sourcetype="random_string" length="10">
	<var name="str2" />
      </setdynvars>
      <setdynvars sourcetype="random_string" length="10">
	<var name="str3" />
      </setdynvars>
      <request>
        <{{sql}} type="connect" database="test" username="{{user}}" />
      </request>
      <request>
        <{{sql}} type="authenticate" database="test" username="{{user}}" password="{{password}}" />
      </request>
      {% for statement in workload_test %}
      <request subst="true">
        <{{sql}} type="sql">{{ statement }}</{{sql}}>
      </request>
      {% endfor %}
      <request>
        <{{sql}} type="close"></{{sql}}>
      </request>
  </session>
 </sessions>
</tsung>
